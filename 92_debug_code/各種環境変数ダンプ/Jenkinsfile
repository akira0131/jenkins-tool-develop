#!groovy

@Library('jenkins-common-lib') _

node('master') { timestamps
{
    stage('他のプロジェクトの環境変数取得')
    {
        try
        {
            printMsg('info', 'null が返却されるだけ？')

            def jobname = "manual-resource_moni"
            def envname = "WORKSPACE"
            def job = hudson.model.Hudson.instance.getItem(jobname)
            def envVars= job.lastBuild.properties.get("envVars")
            println envVars[envname]
        }
        catch(Exception e) {

            println 'result: NG'
            throw e
        }

        println 'result: OK'
    }
    stage('自分のプロジェクトの環境変数取得-1')
    {
        try
        {
            env.each { println it }
        }
        catch(Exception e) {

            println 'result: NG'
            throw e
        }

        println 'result: OK'
    }
    stage('env編')
    {
        try
        {
            current_env = this.getProperty("env").getEnvironment()
            writeDataToFile(current_env, 'env2')
            sh 'env > /opt/var/jenkins/temp/env.txt'
        }
        catch(Exception e) {

            println 'result: NG'
            throw e
        }

        println 'result: OK'
    }
    stage('currentBuild編')
    {
        try
        {
            [
                'number',
                'result',
                'currentResult',
                //'resultIsBetterOrEqualTo',
                //'resultIsWorseOrEqualTo',
                'displayName',
                'description',
                'id',
                'timeInMillis',
                'startTimeInMillis',
                'duration',
                'durationString',
                'previousBuild',
                'nextBuild',
                //'similarly',
                'absoluteUrl',
                'buildVariables',
                'changeSets',
                //'rawBuild'
            ].each { subclass ->
                println 'currentBuild.' + "${subclass}" + ': ' + currentBuild."${subclass}"
            }
        }
        catch(Exception e) {

            println 'result: NG'
            throw e
        }

        println 'result: OK'
    }
}}
